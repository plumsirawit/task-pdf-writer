org: s6007589
app: task-pdf-writer
service: aws-python-api

frameworkVersion: "2"

provider:
  name: aws
  ecr:
    images:
      appimage:
        path: ./
  lambdaHashingVersion: "20201221"
  stage: dev
  region: ap-southeast-1
  environment:
    DJANGO_SETTINGS_MODULE: settings

package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!__pycache__/**"
    - "!*.zip"

# layers:
#   wkhtmltoxLayer:
#     name: wkhtmltox
#     description: wkhtmltox binaries for pdf/image generation
#     package:
#       artifact: wkhtmltox-0.12.6-4.amazonlinux2_lambda.zip
#   xvfbLayer:
#     name: xvfb
#     description: xvfb helpers for pdf generation
#     package:
#       artifact: xvfb-layer.zip

functions:
  hello2:
    # handler: handler.hello
    image:
      name: appimage
      command:
        - handler.hello
    events:
      - http:
          path: /hello
          method: get
  render2:
    # handler: handler.render
    image:
      name: appimage
      command:
        - handler.render
    events:
      - http:
          path: /render
          method: post
  genpdf2:
    image:
      name: appimage
      command:
        - handler.genpdf
    # handler: handler.genpdf
    # layers:
    #   - { Ref: WkhtmltoxLayerLambdaLayer }
    #   - { Ref: XvfbLayerLambdaLayer }
    timeout: 30
    events:
      - http:
          path: /genpdf
          method: post
  getobject:
    image:
      name: appimage
      command:
        - handler_s3.fetch_s3_object
    timeout: 10
    events:
      - http:
          path: /getobject
          method: get
          cors:
            origins: '*'
            headers:
              - Content-Type
              - tpw-user-token
              - tpw-contest
              - tpw-task
              - tpw-s3now
              - tpw-secretsuffix
            allowCredentials: false
  processobject:
    image:
      name: appimage
      command:
        - handler_s3.process_s3_object
    timeout: 100
    events:
      - s3:
          bucket: task-pdf-writer-v1
          event: s3:ObjectCreated:*
          rules:
            - prefix: protected/
            - suffix: .md
          existing: true
  migratelogo:
    image:
      name: appimage
      command:
        - handler_s3.migrate_logo
    timeout: 30
    events:
      - http:
          path: /migratelogo
          method: post
  copylogo:
    image:
      name: appimage
      command:
        - handler_s3.copy_logo
    timeout: 30
    events:
      - http:
          path: /copylogo
          method: post
          cors:
            origins: '*'
            headers:
              - Content-Type
              - tpw-contest
            allowCredentials: false

plugins:
  - serverless-offline
  # - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
