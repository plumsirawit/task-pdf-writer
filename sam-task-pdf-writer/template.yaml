AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.12

  Sample SAM Template for sam-task-pdf-writer

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  TpwS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-task-pdf-writer-tpws3bucket
  GetobjectGateway2Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET'"
        AllowCredentials: false
        AllowHeaders: "'Content-Type, tpw-user-token, tpw-contest, tpw-task, tpw-s3now, tpw-secretsuffix'"
        AllowOrigin: "'*'"
  CopylogoGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST'"
        AllowCredentials: false
        AllowHeaders: "'Content-Type, tpw-contest'"
        AllowOrigin: "'*'"
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        - arm64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./hello_world
      DockerTag: python3.12-v1
  Hello3Function:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler.hello"]
      Architectures:
        - arm64
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Hello2:
          Type: Api
          Properties:
            Path: /hello2
            Method: get
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  Render2Function:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler.render"]
      Architectures:
        - arm64
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Render2:
          Type: Api
          Properties:
            Path: /render
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  Genpdf2Function:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler.genpdf"]
      Architectures:
        - arm64
      Timeout: 30
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Genpdf2:
          Type: Api
          Properties:
            Path: /genpdf
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  GetobjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler_s3.fetch_s3_object"]
      Architectures:
        - arm64
      Timeout: 30
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Getobject:
          Type: Api
          Properties:
            Path: /getobject
            Method: get
            RestApiId:
              Ref: GetobjectGateway2Api
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  Processobject2Function:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
      PackageType: Image
      ImageConfig:
        Command: ["handler_s3.process_s3_object"]
      Architectures:
        - arm64
      Timeout: 60
      MemorySize: 4096
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
          HOME: /tmp/
      Events:
        Processobj:
          Type: S3
          Properties:
            Bucket:
              Ref: TpwS3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: protected/
                  - Name: suffix
                    Value: .md
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  MigratelogoFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler_s3.migrate_logo"]
      Architectures:
        - arm64
      Timeout: 30
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Getobject:
          Type: Api
          Properties:
            Path: /migratelogo
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api
  CopylogoFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["handler_s3.copy_logo"]
      Architectures:
        - arm64
      Timeout: 30
      Environment:
        Variables:
          DJANGO_SETTINGS_MODULE: settings
      Events:
        Getobject:
          Type: Api
          Properties:
            Path: /copylogo
            Method: post
            RestApiId:
              Ref: CopylogoGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./aws-python-api

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
# Outputs:
# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
# Find out more about other implicit resources you can reference within SAM
# https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
# HelloWorldApi:
#   Description: API Gateway endpoint URL for Prod stage for Hello World function
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
# HelloWorldFunction:
#   Description: Hello World Lambda Function ARN
#   Value: !GetAtt HelloWorldFunction.Arn
# HelloWorldFunctionIamRole:
#   Description: Implicit IAM Role created for Hello World function
#   Value: !GetAtt HelloWorldFunctionRole.Arn
# Hello2Api:
#   Description: API Gateway endpoint URL for Prod stage for Hello 2 function
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello2/"
# Hello2Function:
#   Description: Hello 2 Lambda Function ARN
#   Value: !GetAtt Hello2Function.Arn
# Hello2FunctionIamRole:
#   Description: Implicit IAM Role created for Hello 2 function
#   Value: !GetAtt Hello2FunctionRole.Arn
# Render2Api:
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/render/"
# Render2Function:
#   Value: !GetAtt Render2Function.Arn
# Render2FunctionIamRole:
#   Value: !GetAtt Render2FunctionRole.Arn
# Genpdf2Api:
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/genpdf/"
# Genpdf2Function:
#   Value: !GetAtt Genpdf2Function.Arn
# Genpdf2FunctionIamRole:
#   Value: !GetAtt Genpdf2FunctionRole.Arn
# GetobjectApi:
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/render/"
# GetobjectFunction:
#   Value: !GetAtt GetobjectFunction.Arn
# GetobjectFunctionIamRole:
#   Value: !GetAtt GetobjectFunctionRole.Arn
# Render2Api:
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/render/"
# Render2Function:
#   Value: !GetAtt Render2Function.Arn
# Render2FunctionIamRole:
#   Value: !GetAtt Render2FunctionRole.Arn
